slackApp.provider('dbService', function dbServiceProvider() {

  //the provider recipe for services require you specify a $get function
  this.$get= ['dbhost',function dbServiceFactory(dbhost){
     // return the factory as a provider
     // that is available during the configuration phase
     return new DbService(dbhost);  
  }]

});

function DbService(dbhost){
    var status;

    this.setUrl = function(url){
        dbhost = url;
    }

    this.getData = function() {      
            return dbhost;    
    }; 
}

resolve: {
                dbData: function(DbService, $http) {
                     /*
                     *dbServiceProvider returns a dbService instance to your app whenever
                     * needed, and this instance is setup internally with a promise, 
                     * so you don't need to worry about $q and all that
                     */
                    return DbService(headerTabs[ii].path).getData();
                }
             }
			 
slackApp.factory("controllerId", function(){
    return {
        getHeaderPath: function(x) {
            alert(x);
            return x;
        }
    };
});

$routeProvider.when(
            headerTabs[ii].path, 
            { templateUrl: headerTabs[ii].templateUrl, 
                controller:  headerTabs[ii].controller,
                resolve: {
                    headerPath : function(controllerId) {
                        return 'alpha';
                    }
                }
             });